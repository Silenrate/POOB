#BlueJ class context
comment0.target=Velocidad
comment0.text=\r\n\ @author\ Nicolas\ Aguilera\ &&\ Daniel\ Walteros\r\n\r\n
comment1.params=l\ a
comment1.target=Velocidad(double,\ Angulo)
comment1.text=\r\n\ Constructor\ de\ la\ velocidad,\ en\ componentes\ polares\r\n\ @param\ l\ longitud\ de\ la\ velocidad\r\n\ @param\ a\ angulo\ de\ la\ velocidad\r\n
comment10.params=a
comment10.target=Velocidad\ rote(Angulo)
comment10.text=\r\n\ Rota\ el\ velocidad\ el\ angulo\ dado,\ con\ respecto\ al\ origen.\ \r\n\ Es\ decir\ que\ el\ angulo\ resultante,\ es\ la\ suma\ del\ angulo\ dado\ con\ el\ angulo\ inicial\ de\ la\ velocidad,\ \r\n\ y\ la\ distancia\ es\ la\ misma.\r\n\ @param\ a\ Angulo\ a\ rotar\r\n
comment11.params=v
comment11.target=Velocidad\ sume(Velocidad)
comment11.text=\ \r\n\ Suma\ esta\ velocidad\ con\ otra\r\n\ @param\ v\ una\ velocidad\r\n\ @return\ la\ nueva\ velocidad\r\n
comment12.params=v
comment12.target=Velocidad\ reste(Velocidad)
comment12.text=\ \r\n\ Resta\ esta\ velocidad\ con\ otra\r\n\ @param\ v\ una\ velocidad\r\n\ @return\ la\ nueva\ velocidad\r\n
comment13.params=operando
comment13.target=Velocidad\ escalar(double)
comment13.text=\ \r\n\ Multiplica\ esta\ velocidad\ por\ un\ escalar\r\n\ @param\ operando,\ escalar\ por\ el\ que\ se\ multiplicara\ la\ velocidad\r\n\ @return\ la\ nueva\ velocidad\r\n
comment14.params=v
comment14.target=Velocidad\ vectorial(Velocidad)
comment14.text=\ \r\n\ Realiza\ el\ producto\ velocidad\ entre\ esta\ velocidad\ y\ otra\r\n\ @param\ v,\ una\ velocidad\r\n\ @return\ la\ nueva\ velocidad\r\n
comment15.params=t
comment15.target=Velocidad\ tiempo(double)
comment15.text=\ \r\n\ Halla\ la\ velocidad\ despues\ de\ un\ tiempo\ t\r\n\ @param\ t,\ tiempo\r\n\ @return\ la\ nueva\ velocidad\r\n
comment16.params=
comment16.target=java.lang.String\ toString()
comment16.text=\ \r\n\ Retorna\ una\ cadena\ que\ describe\ a\ este\ velocidad\ (en\ componentes\ polares)\r\n
comment2.params=
comment2.target=double\ componenteH()
comment2.text=\r\n\ Retorna\ el\ componente\ horizontal\r\n\ @return\ componente\ horizontal\ de\ la\ velocidad\r\n
comment3.params=
comment3.target=double\ componenteV()
comment3.text=\r\n\ Retorna\ el\ componente\ vertical\ de\ la\ velocidad\r\n\ @return\ componente\ vertical\ de\ la\ velocidad\r\n
comment4.params=
comment4.target=Velocidad\ velocidadH()
comment5.params=
comment5.target=Velocidad\ velocidadV()
comment6.params=
comment6.target=Angulo\ angulo()
comment6.text=\r\n\ Retorna\ el\ angulo\ de\ la\ velocidad\r\n\ @return\ angulo\ de\ la\ velocidad\r\n
comment7.params=
comment7.target=double\ longitud()
comment7.text=\r\n\ Retorna\ la\ longitud\ de\ la\ velocidad\r\n\ @return\ la\ longitud\ del\ origen\ al\ velocidad\r\n
comment8.params=v
comment8.target=boolean\ equals(Velocidad)
comment8.text=\r\n\ Compara\ este\ velocidad\ con\ otro.\ Ser\u00E1n\ iguales\ si\ la\ distancia\ entre\ ellos\ es\ menor\ que\ MAXERROR\r\n\ @param\ v\ el\ velocidad\ a\ comparar\ con\ este\r\n
comment9.params=o
comment9.target=boolean\ equals(java.lang.Object)
comment9.text=\ \r\n\ Compara\ si\ este\ velocidad\ es\ igual\ al\ parametro\ (debe\ ser\ tambien\ un\ velocidad)\r\n\ (Es\ el\ m\u00E9todo\ que\ usa\ JUnit)\r\n\ @param\ o\ Objeto\ a\ comparar\r\n
numComments=17
