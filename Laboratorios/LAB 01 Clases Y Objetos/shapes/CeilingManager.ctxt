#BlueJ class context
comment0.target=CeilingManager
comment0.text=\r\n\ A\ gestor\ thats\ manage\ certain\ group\ of\ ceilings.\r\n\r\n\ @author\ (Daniel\ Walteros\ y\ Nicolas\ Aguilera)\r\n\ @version\ (31\ of\ January\ of\ 2019)\r\n
comment1.params=visualizacion
comment1.target=CeilingManager(java.lang.String)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ CelilingManager\r\n\ \r\n\ @param\ visualizacion\ the\ way\ that\ represents\ the\ ceiling(the\ only\ ways\ acceptable\ is\ "tree"\ or\ "ceiling")\r\n
comment10.params=lcolor
comment10.target=boolean\ check(java.lang.String)
comment10.text=\r\n\ Function\ that\ checks\ if\ a\ ceiling\ is\ on\ the\ gestor\ based\ in\ their\ layer\ color.\r\n\r\n\ @param\ lcolor\ The\ color\ of\ the\ ceiling(cannot\ be\ repeated).\r\n\ @return\ The\ boolean\ value\ of\ the\ presence\ o\ the\ ceiling\ in\ the\ gestor.\r\n
comment11.params=
comment11.target=void\ show()
comment11.text=\r\n\ Shows\ the\ ceilings\ in\ the\ gestor\ in\ their\ visualization\ form.\r\n\r\n
comment12.params=
comment12.target=java.lang.String\ getMaxCeiling()
comment12.text=\r\n\ Gets\ the\ ceiling\ with\ more\ resistance.\r\n\ \r\n\ @return\ The\ color\ of\ the\ ceiling\ with\ the\ max\ amount\ of\ resistance\ in\ the\ gestor.\r\n
comment2.params=layers\ color
comment2.target=void\ add(int[],\ java.lang.String)
comment2.text=\r\n\ Adds\ a\ new\ ceiling\ to\ the\ ceiling\ gestor\r\n\r\n\ @param\ layers\ A\ integers\ array\ with\ the\ value\ of\ the\ resistances.\r\n\ @param\ color\ The\ color\ of\ the\ ceiling(cannot\ be\ repeated)\r\n
comment3.params=color\ layer
comment3.target=void\ addCapa(java.lang.String,\ int)
comment3.text=\r\n\ Adds\ a\ new\ resistance\ in\ one\ ceiling\ of\ the\ gestor.\r\n\r\n\ @param\ color\ The\ color\ of\ the\ ceiling\ that\ is\ going\ to\ have\ a\ new\ layer.\r\n\ @param\ layer\ The\ value\ of\ the\ resistance\ that\ have\ the\ new\ resistance.\r\n
comment4.params=color
comment4.target=void\ deleteCapa(java.lang.String)
comment4.text=\r\n\ Deletes\ the\ first\ resistance\ in\ one\ ceiling\ of\ the\ gestor.\r\n\r\n\ @param\ color\ The\ color\ of\ the\ ceiling\ that\ is\ going\ to\ have\ a\ new\ layer.\r\n\ @param\ layer\ The\ value\ of\ the\ resistance\ that\ have\ the\ new\ resistance.\r\n
comment5.params=delColor
comment5.target=void\ deleteLayer(java.lang.String)
comment5.text=\r\n\ Delete\ a\ ceiling\ from\ the\ gestor.\r\n\r\n\ @param\ delColor\ The\ color\ of\ the\ ceiling\ that\ is\ going\ to\ be\ deleted.\r\n
comment6.params=layer
comment6.target=void\ addAll(int)
comment6.text=\r\n\ Adds\ a\ new\ resistance\ in\ all\ the\ ceilings\ of\ the\ gestor.\r\n\r\n\ @param\ layer\ The\ value\ of\ the\ resistance\ that\ have\ the\ new\ resistance.\r\n
comment7.params=
comment7.target=void\ deleteAll()
comment7.text=\r\n\ Deletes\ the\ first\ resistance\ in\ all\ the\ ceilings\ of\ the\ gestor.\r\n\r\n
comment8.params=tree1\ tree2
comment8.target=boolean\ equal(java.lang.String,\ java.lang.String)
comment8.text=\r\n\ Comparates\ two\ ceilings\ for\ their\ tree\ form.\r\n\r\n\ @param\ tree1\ The\ color\ of\ the\ first\ ceiling\ that\ is\ going\ to\ be\ compared.\r\n\ @param\ tree2\ The\ color\ of\ the\ second\ ceiling\ that\ is\ going\ to\ be\ compared.\r\n\ @return\ The\ boolean\ value\ about\ if\ the\ two\ ceilings\ have\ the\ same\ tree\ form.\ \r\n
comment9.params=newVisualizacion
comment9.target=void\ setVisualizacion(java.lang.String)
comment9.text=\r\n\ Sets\ the\ visualization\ of\ the\ ceiling.\r\n\r\n\ @param\ newVisualizacion\ A\ string\ representing\ the\ showing\ form(tree\ or\ ceiling\ in\ double\ quotes).\r\n
numComments=13
